{"version":3,"sources":["components/Task.js","components/List.js","App.js","index.js"],"names":["Task","task","handle_check","index","draggableId","key","provided","snapshot","onClick","ref","innerRef","draggableProps","dragHandleProps","className","style","backgroundColor","isDragging","type","checked","is_fin","onChange","name","List","tasks","map","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","useAuthState","user","inputField","useRef","useState","input","setinput","settasks","is_signin","setis_signin","tmp","target","find","handle_add","user_input","uuid_v4","current","focus","useEffect","collection","doc","currentUser","uid","get","then","data","file","onAuthStateChanged","set","merge","value","placeholder","evt","onKeyDown","sort","a","b","localeCompare","filter","signOut","onDragEnd","destination","source","elem","splice","handle_drag","droppableId","droppableProps","provider","GoogleAuthProvider","signInWithPopup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1b43b51.chunk.js","sourcesContent":["import './Task.css'\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\n\r\nexport default function Task({ task, handle_check, index }) {\r\n  return (\r\n    <Draggable draggableId={task.key} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div onClick={() => handle_check(task.key)}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <div className=\"Task\" style={{backgroundColor:(snapshot.isDragging? '#2aa198': '#222')}}>\r\n            <input type=\"checkbox\" checked={task.is_fin} onChange={() => null} className=\"Task-check\"/>\r\n            <label>{task.name}</label>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n","import Task from './Task'\r\n\r\nexport default function List({ tasks, handle_check }) {\r\n  return (\r\n    tasks.map((task, index) => <Task task={task} key={task.key} index={index} handle_check={handle_check}/>)\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\n\nimport List from './components/List'\nimport './App.css'\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { v4 as uuid_v4 } from \"uuid\";\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nimport { useAuthState} from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBIi3TG_NqXzCjwzl7g7IdcsSICfeUm8yI\",\n  authDomain: \"test01-e5d31.firebaseapp.com\",\n  projectId: \"test01-e5d31\",\n  storageBucket: \"test01-e5d31.appspot.com\",\n  messagingSenderId: \"858569537263\",\n  appId: \"1:858569537263:web:946b2bcbfd84c98962cd1a\",\n  measurementId: \"G-L5WS4LDD4M\"\n})\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nfunction App() {\n  const [user] = useAuthState(auth)\n\n  const inputField = useRef()\n  const [input, setinput] = useState(\"\")\n  const [tasks, settasks] = useState([])\n  const [is_signin, setis_signin] = useState(false)\n\n  \n  useEffect(() => {\n    if(is_signin){\n      const DBref = firestore.collection(\"Todo List\").doc(auth.currentUser.uid)\n      DBref.get().then(snapshot => {\n        settasks(snapshot.data().file);\n      })\n    }\n  }, [is_signin])\n  auth.onAuthStateChanged(user => setis_signin(user))\n\n  useEffect(() => {\n    if(!is_signin) return\n    firestore.collection('Todo List')\n      .doc(auth.currentUser.uid)\n      .set({file: tasks, uid: auth.currentUser.uid}, {merge: true})\n  }, [tasks])\n  \n  function handle_signIn() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  function handle_signOut() {\n    if(auth.currentUser) {\n      auth.signOut()\n    }\n  }\n\n  function handle_check(key) {\n    const tmp = [...tasks]\n    const target = tmp.find(task => task.key === key)\n    target.is_fin = !target.is_fin\n    settasks(tmp)\n  }\n\n\n  function handle_add() {\n    const user_input = input\n    if(input === '') return\n\n    settasks(tasks => [...tasks, {name: user_input, is_fin: false, key: uuid_v4()}])  \n    setinput(\"\")\n    inputField.current.focus()\n  }\n  function handle_sort() {\n    const tmp = [...tasks].sort((a,b) => a.name.localeCompare(b.name))\n    settasks(tmp)\n  }\n  function handle_delete() {\n    settasks(tasks.filter(task => !task.is_fin))\n  }\n  function handle_clear() {\n    settasks([])\n  }\n\n  function handle_drag(evt) {\n    const { destination, source } = evt\n\n    if(!evt.destination) return \n    if(destination.index === source.index) return    \n\n    const tmp = [...tasks]\n    const elem = tmp[source.index]\n    tmp.splice(source.index, 1);\n    tmp.splice(destination.index, 0, elem);\n    \n    settasks(tmp)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h2>todo list</h2>\n      {(user?\n        <div>\n          <div className=\"Form\">\n            <div>\n              <input ref={inputField} value={input} placeholder=\"add a task...\"\n                onChange={evt => setinput(evt.target.value)}\n                onKeyDown={evt => (evt.key !== 'Enter' ? null : handle_add())}/>\n            </div>\n            <div>\n              <button onClick={handle_add}>add</button>\n              <button onClick={handle_sort}>sort</button>\n              <button onClick={handle_delete}>delete</button>\n              <button onClick={handle_clear}>clear all</button>\n              <button onClick={handle_signOut}>sign out</button>\n            </div>\n          </div>\n\n          <DragDropContext onDragEnd={evt => handle_drag(evt)}>\n            <Droppable droppableId=\"TaskList\">\n              {(provided, snapshot) => (\n                <div\n                  className=\"DropPanel\"\n                  ref={provided.innerRef} \n                  {...provided.droppableProps}\n                >\n                  <List tasks={tasks} handle_check={handle_check}/>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      :\n        <button onClick={handle_signIn}>login with google</button>\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}